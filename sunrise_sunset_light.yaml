blueprint:
  name: A1 - Sunrise and Sunset Automation
  description: >
        # ğŸ”† A1 - Sunrise and Sunset Lighting Automation ğŸ”†

        Automate your home lighting based on the position of the sun! 
        This blueprint allows you to control a specific light entity at sunrise and sunset, 
        ensuring your lighting aligns perfectly with the natural daylight cycle.

        **Important Notes:**
        - Make sure to specify a light entity for the automation to work.
        - If no light is specified, a warning will be logged, and no actions will be performed.
    
        **Version: 1.0**

        **Features:**
        ğŸ”µ **Sunrise and Sunset Triggers**: Automatically turn on your lights at sunrise and turn them off at sunset.
        ğŸ”µ **Customizable Elevation Shifts**: Set specific elevation thresholds to fine-tune when your lights activate or deactivate.
        ğŸ”µ **Startup Trigger**: Optionally trigger the automation when Home Assistant starts, ensuring your lights are always in sync with the current time of day.
        ğŸ”µ **Light Control**: Directly control a single light entity to turn on at sunrise and off at sunset, or vice versa, depending on your preferences.


 
  domain: automation
  input:
    trigger_at_startup:
      name: Trigger at Startup
      description: Trigger actions at startup if conditions are met.
      default: true
      selector:
        boolean:

    sunrise_elevation_shift:
      name: Sunrise Elevation Shift
      description: Threshold for sunrise actions (-6Â° to 6Â°).
      default: -1
      selector:
        number:
          min: -6
          max: 6
          unit_of_measurement: "Â°"

    sunset_elevation_shift:
      name: Sunset Elevation Shift
      description: Threshold for sunset actions (-6Â° to 6Â°).
      default: -4
      selector:
        number:
          min: -6
          max: 6
          unit_of_measurement: "Â°"

    target_light:
      name: Target Light
      description: The light to control at sunrise and sunset.
      selector:
        entity:
          domain: light
      default: null  # Make it optional by default

variables:
  trigger_at_startup: !input trigger_at_startup
  sunrise_elevation_shift: !input sunrise_elevation_shift
  sunset_elevation_shift: !input sunset_elevation_shift
  target_light: !input target_light

trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 0
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: 0
  - platform: homeassistant
    event: start

condition:
  - condition: template
    value_template: >-
      {% if not target_light %}
      {{ log('Warning: No light specified! Automation will not perform any action.') }}
      {% endif %}

  - condition: or
    conditions:
      # Sunrise condition
      - condition: and
        conditions:
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'true'
          - condition: template
            value_template: >-
              {{ trigger.platform != "homeassistant" or 
                 (trigger_at_startup and state_attr("sun.sun", "elevation") >= sunrise_elevation_shift) }}
      # Sunset condition
      - condition: and
        conditions:
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'false'
          - condition: template
            value_template: >-
              {{ trigger.platform != "homeassistant" or 
                 (trigger_at_startup and state_attr("sun.sun", "elevation") <= sunset_elevation_shift) }}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ target_light is not none }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: sun.sun
                    attribute: rising
                    state: 'true'
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ target_light }}"
              - conditions:
                  - condition: state
                    entity_id: sun.sun
                    attribute: rising
                    state: 'false'
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: "{{ target_light }}"
    default: []

mode: single
