blueprint:
  name: A1 - Sunrise and Sunset Automation
  description: |
    # 🔆 A1 - Sunrise and Sunset Lighting Automation 🔆

    Automate your home lighting based on Sun position!
    This blueprint allows you to control a specific light entity at sunrise and sunset,
    ensuring your lighting aligns perfectly with the natural daylight cycle.

    ⚠️ **Important Notes:** ⚠️
    - If no light is specified, no actions will be performed. Ensure to provide a light entity.

    Version: 1.0
    **Features:**
    - Startup Trigger
    - Customizable Elevation Shifts
    - Light Control

    **Flip Light Action:**
    - If `true`, the light action is flipped: turn on at sunrise and off at sunset.
    - If `false`, the light will turn off at sunrise and on at sunset.

  domain: automation
  input:
    trigger_at_startup:
      name: Trigger at Startup
      description: Trigger actions at startup if conditions are met.
      default: true
      selector:
        boolean:

    sunrise_elevation_shift:
      name: Sunrise Elevation Shift
      description: Threshold for sunrise actions (-6° to 6°).
      default: -1.5
      selector:
        number:
          min: -6
          max: 6
          unit_of_measurement: "°"

    sunset_elevation_shift:
      name: Sunset Elevation Shift
      description: Threshold for sunset actions (-6° to 6°).
      default: -2
      selector:
        number:
          min: -6
          max: 6
          unit_of_measurement: "°"

    target_light:
      name: Target Light
      description: The light to control at sunrise and sunset.
      selector:
        entity:
          domain: light
      default: null

    flip_light_action:
      name: Flip Light Action
      description: |
        If `true`, the light action is flipped:
        - Turn on at sunrise and turn off at sunset.
        If `false`, the light will:
        - Turn off at sunrise and turn on at sunset.
      default: false
      selector:
        boolean:

variables:
  trigger_at_startup: !input trigger_at_startup
  sunrise_elevation_shift: !input sunrise_elevation_shift
  sunset_elevation_shift: !input sunset_elevation_shift
  target_light: !input target_light
  flip_light_action: !input flip_light_action

trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: !input sunset_elevation_shift
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: !input sunrise_elevation_shift
  - platform: homeassistant
    event: start

condition:
  - condition: template
    value_template: >-
      {% if not target_light %}
      No light specified! Automation will not perform any action.
      {% endif %}

  - condition: or
    conditions:
      # Sunset condition
      - condition: and
        conditions:
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'false'
          - condition: template
            value_template: >-
              {{ trigger.platform != "homeassistant" or 
                 (trigger_at_startup and state_attr("sun.sun", "elevation") <= sunset_elevation_shift) }}
      # Sunrise condition
      - condition: and
        conditions:
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'true'
          - condition: template
            value_template: >-
              {{ trigger.platform != "homeassistant" or 
                 (trigger_at_startup and state_attr("sun.sun", "elevation") >= sunrise_elevation_shift) }}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ target_light is not none }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: sun.sun
                    attribute: rising
                    state: 'false'
                sequence:
                  - service: >
                      {% if flip_light_action %}
                      light.turn_on
                      {% else %}
                      light.turn_off
                      {% endif %}
                    target:
                      entity_id: "{{ target_light }}"
              - conditions:
                  - condition: state
                    entity_id: sun.sun
                    attribute: rising
                    state: 'true'
                sequence:
                  - service: >
                      {% if flip_light_action %}
                      light.turn_off
                      {% else %}
                      light.turn_on
                      {% endif %}
                    target:
                      entity_id: "{{ target_light }}"
    default: []

mode: single
