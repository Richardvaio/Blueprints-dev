blueprint:
  name: A! Sunrise and Sunset Light Automation
  description: |
    Automates a light based on sunrise and sunset elevations, with options for transitions.
    Turns the light on or off at specified elevations and handles light state changes.

  domain: automation
  input:
    trigger_at_startup:
      name: Trigger at Startup
      description: Trigger actions at startup if conditions are met.
      default: true
      selector:
        boolean:
    flip_light_action:
      name: Flip Light Action
      description: Determines if the light action should be flipped.
      default: false
      selector:
        boolean:
    sunrise_elevation_shift:
      name: Sunrise Elevation Shift
      description: Threshold for sunrise actions in degrees.
      default: -1
      selector:
        number:
          min: -6
          max: 6
          unit_of_measurement: "°"
    sunset_elevation_shift:
      name: Sunset Elevation Shift
      description: Threshold for sunset actions in degrees.
      default: -2
      selector:
        number:
          min: -6
          max: 6
          unit_of_measurement: "°"
    target_light:
      name: Target Light
      description: The light to control based on sunrise and sunset.
      selector:
        entity:
          domain: light
    use_transition:
      name: Use Transition
      description: Whether to apply a transition effect when changing the light state.
      default: false
      selector:
        boolean:
    light_transition_duration:
      name: Light Transition Duration
      description: Duration of the light transition in seconds.
      default: 1
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: "s"

trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: !input sunset_elevation_shift
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: !input sunrise_elevation_shift
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: !input target_light
    from: "unavailable"
    to: "on"
  - platform: state
    entity_id: !input target_light
    from: "unknown"
    to: "on"

condition:
  - condition: template
    value_template: "{{ target_light is not none }}"
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: numeric_state
            entity_id: sun.sun
            attribute: elevation
            below: !input sunset_elevation_shift
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'false'
      - condition: and
        conditions:
          - condition: numeric_state
            entity_id: sun.sun
            attribute: elevation
            above: !input sunrise_elevation_shift
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'true'

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'false'
        sequence:
          - service: light.turn_on
            target:
              entity_id: "{{ target_light }}"
            data:
              transition: >
                {% if use_transition %}
                  {{ light_transition_duration }}
                {% else %}
                  0
                {% endif %}
      - conditions:
          - condition: state
            entity_id: sun.sun
            attribute: rising
            state: 'true'
        sequence:
          - service: light.turn_off
            target:
              entity_id: "{{ target_light }}"
            data:
              transition: >
                {% if use_transition %}
                  {{ light_transition_duration }}
                {% else %}
                  0
                {% endif %}
    default: []
mode: single
